@model LetWeCook.Web.Areas.Cooking.Models.ViewModels.RecipeViewModel
@{
    // Initialize a random number generator
    var random = new Random();
}
<div class="min-h-screen bg-gray-100 p-8">
    <div class="w-full bg-teal-600 py-4 text-center">
        <a href="/" class="text-4xl font-extrabold text-white transition duration-300 hover:text-teal-200">
            Let We Cook
        </a>
    </div>

    <!-- Page Title -->
    <h1 class="my-10 text-center text-3xl font-bold text-gray-800">Recipe Browser</h1>

    <!-- Search, Filter, and Sort Section -->
    <form method="get" asp-action="Index" class="space-y-4">
        <div class="flex flex-col items-center justify-between space-y-4 md:flex-row md:space-y-0">
            <!-- Search Bar -->
            <div class="relative w-full max-w-md">
                <input type="text" name="SearchTerm" value="@Model.SearchTerm" placeholder="Search recipes..."
                       class="w-full rounded-lg border border-gray-300 px-4 py-4 text-gray-700 shadow focus:outline-none focus:ring-2 focus:ring-blue-400" />
            </div>

            <!-- Filter Section -->
            <div class="flex w-full flex-col space-y-2 md:w-auto md:flex-row md:space-y-0 md:space-x-4">
                <!-- Filter by Cuisine -->
                <select name="Cuisine" class="w-48 rounded-lg border border-gray-300 px-3 py-2 shadow focus:outline-none focus:ring-2 focus:ring-blue-400">
                    <option value="" selected>Filter by Cuisine</option>
                    <option value="Vietnamese" selected=@(Model.Cuisine == "Vietnamese")>Vietnamese</option>
                    <option value="Italian" selected=@(Model.Cuisine == "Italian")>Italian</option>
                    <option value="American" selected=@(Model.Cuisine == "American")>American</option>
                    <option value="Mexican" selected=@(Model.Cuisine == "Mexican")>Mexican</option>
                    <option value="Indian" selected=@(Model.Cuisine == "Indian")>Indian</option>
                </select>

                <!-- Filter by Difficulty -->
                <select name="Difficulty" class="w-48 rounded-lg border border-gray-300 bg-white px-4 text-gray-800 shadow-md transition-all duration-200 focus:ring-2 focus:ring-blue-500 focus:outline-none">
                    <option value="" selected>Filter by Difficulty</option>
                    <option value="EASY" selected=@(Model.Difficulty == "EASY")>Easy</option>
                    <option value="MEDIUM" selected=@(Model.Difficulty == "MEDIUM")>Medium</option>
                    <option value="HARD" selected=@(Model.Difficulty == "HARD")>Hard</option>
                </select>

                <!-- Filter by Cook Time -->
                <div class="flex w-96 items-center justify-center gap-x-4">
                    <label for="cookTimeRange" class="text-base font-medium text-blue-600">Cook time:</label>
                    <div class="flex items-center space-x-2">
                        <input type="range" name="CookTime" min="0" max="120" step="5" value="@Model.CookTime"
                               id="cookTimeRange"
                               class="h-2 w-3/4 cursor-pointer appearance-none rounded-lg bg-blue-300 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-blue-400" />
                        <span id="cookTimeValue" class="text-base font-semibold text-blue-600">@Model.CookTime minutes</span>
                    </div>
                </div>

                <!-- Filter by Servings -->
                <div class="mt-4 flex w-96 items-center justify-center gap-x-4">
                    <label for="servingsRange" class="font-medium text-green-600">Servings:</label>
                    <div class="flex items-center space-x-2">
                        <input type="range" name="Servings" min="0" max="10" step="1" value="@Model.Servings"
                               id="servingsRange"
                               class="h-2 w-3/4 cursor-pointer appearance-none rounded-lg bg-green-300 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-green-400" />
                        <span id="servingsValue" class="font-semibold text-green-600">@Model.Servings peoples</span>
                    </div>
                </div>


            </div>

            <!-- Sort Dropdown -->
            <select name="SortBy" class="w-48 max-w-xs rounded border border-gray-300 px-3 py-2 shadow focus:outline-none focus:ring-2 focus:ring-blue-400">
                <option value="" selected>Sort by</option>
                <option value="Popular" selected=@(Model.SortBy == "Popular")>Most Popular</option>
                <option value="Newest" selected=@(Model.SortBy == "Newest")>Newest</option>
                <option value="Rating" selected=@(Model.SortBy == "Rating")>Top Rated</option>
            </select>
        </div>

        <!-- Pagination -->
        <div class="mt-8 flex items-center justify-center space-x-2">
            <label for="itemsPerPage" class="font-medium text-gray-700">Items per page:</label>
            <select id="itemsPerPage" name="ItemsPerPage" class="rounded-md border-gray-300 bg-white px-4 py-2 transition focus:border-indigo-600 focus:ring-indigo-600">
                <option value="1" selected=@(Model.ItemsPerPage == 1)>1</option>
                <option value="2" selected=@(Model.ItemsPerPage == 2)>2</option>
                <option value="3" selected=@(Model.ItemsPerPage == 3)>3</option>
                <option value="5" selected=@(Model.ItemsPerPage == 5)>5</option>
                <option value="10" selected=@(Model.ItemsPerPage == 10)>10</option>
                <option value="20" selected=@(Model.ItemsPerPage == 20)>20</option>
                <option value="30" selected=@(Model.ItemsPerPage == 30)>30</option>
                <option value="50" selected=@(Model.ItemsPerPage == 50)>50</option>
            </select>
            <button class="rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600">Search</button>
        </div>

    </form>

    <!-- Recipe Cards Grid -->
    <div class="grid-cols-1 mt-8 grid gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
        @foreach (var recipe in Model.Recipes)
        {
            // Generate a random rating between 0 and 5
            var rating = random.NextDouble() * 5;
            var roundedRating = Math.Round(rating, 1); // Round to 1 decimal place

            <a href="@Url.Action("Details", "Recipe", new { area = "Cooking", id = recipe.Id })" class="cursor-pointer overflow-hidden rounded-lg bg-white shadow-lg transition-transform duration-300 hover:scale-105 hover:shadow-xl">
                <img src="@recipe.RecipeCoverImage.Url" alt="@recipe.RecipeCoverImage.Alt" class="h-48 w-full object-cover" />
                <div class="p-4">
                    <h2 class="text-xl font-semibold text-gray-800">@recipe.Title</h2>
                    <p class="text-gray-600">@recipe.Description</p>
                    <div class="mt-2 flex items-center text-sm text-gray-500">
                        <span>Difficulty: @recipe.Difficulty</span>
                        <span class="mx-2">•</span>
                        <span>Cook Time: @recipe.CookTimeInMinutes mins</span>
                        <span class="mx-2">•</span>
                        <span>Servings: @recipe.Serving</span>
                    </div>
                    <!-- Star Rating -->
                    <div class="mt-2 flex items-center gap-1 text-sm text-yellow-500">
                        @for (var i = 0; i < (int)roundedRating; i++)
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 fill-yellow-500" viewBox="0 0 20 20" fill="currentColor">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.482 4.564a1 1 0 00.95.69h4.769c.969 0 1.371 1.24.588 1.81l-3.857 2.802a1 1 0 00-.364 1.118l1.482 4.564c.3.921-.755 1.688-1.54 1.118l-3.857-2.802a1 1 0 00-1.175 0l-3.857 2.802c-.784.57-1.839-.197-1.54-1.118l1.482-4.564a1 1 0 00-.364-1.118L2.37 9.991c-.783-.57-.38-1.81.588-1.81h4.77a1 1 0 00.95-.69L9.049 2.927z" />
                            </svg>
                        }
                        @if (roundedRating % 1 > 0.5)
                        {
                            <!-- Add a half-star for fractional ratings -->
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 fill-yellow-500" viewBox="0 0 20 20" fill="currentColor">
                                <defs>
                                    <clipPath id="halfStar">
                                        <rect x="0" y="0" width="10" height="20" />
                                    </clipPath>
                                </defs>
                                <path clip-path="url(#halfStar)" d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.482 4.564a1 1 0 00.95.69h4.769c.969 0 1.371 1.24.588 1.81l-3.857 2.802a1 1 0 00-.364 1.118l1.482 4.564c.3.921-.755 1.688-1.54 1.118l-3.857-2.802a1 1 0 00-1.175 0l-3.857 2.802c-.784.57-1.839-.197-1.54-1.118l1.482-4.564a1 1 0 00-.364-1.118L2.37 9.991c-.783-.57-.38-1.81.588-1.81h4.77a1 1 0 00.95-.69L9.049 2.927z" />
                            </svg>
                        }
                        <span class="text-gray-600">(@roundedRating)</span>
                    </div>
                </div>
            </a>
        }
    </div>

    <!-- Pagination -->
    <div class="mt-6 flex items-center justify-center space-x-2">
        @if (Model.HasPreviousPage)
        {
            <a asp-action="Index"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-cuisine="@Model.Cuisine"
               asp-route-difficulty="@Model.Difficulty"
               asp-route-cookTime="@Model.CookTime"
               asp-route-servings="@Model.Servings"
               asp-route-sortBy="@Model.SortBy"
               asp-route-itemsPerPage="@Model.ItemsPerPage"
               asp-route-currentPage="1"
               class="rounded-md border border-gray-300 bg-white px-4 py-2 text-gray-700 transition duration-300 hover:bg-indigo-600 hover:text-white">
                First
            </a>
            <a asp-action="Index"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-cuisine="@Model.Cuisine"
               asp-route-difficulty="@Model.Difficulty"
               asp-route-cookTime="@Model.CookTime"
               asp-route-servings="@Model.Servings"
               asp-route-sortBy="@Model.SortBy"
               asp-route-itemsPerPage="@Model.ItemsPerPage"
               asp-route-currentPage="@(Model.CurrentPage - 1)"
               class="rounded-md border border-gray-300 bg-white px-4 py-2 text-gray-700 transition duration-300 hover:bg-indigo-600 hover:text-white">
                Previous
            </a>
        }

        <span class="rounded-md bg-gray-100 px-4 py-2 text-gray-700">
            Page @Model.CurrentPage of @Model.TotalPages
        </span>

        @if (Model.HasNextPage)
        {
            <a asp-action="Index"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-cuisine="@Model.Cuisine"
               asp-route-difficulty="@Model.Difficulty"
               asp-route-cookTime="@Model.CookTime"
               asp-route-servings="@Model.Servings"
               asp-route-sortBy="@Model.SortBy"
               asp-route-itemsPerPage="@Model.ItemsPerPage"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               class="rounded-md border border-gray-300 bg-white px-4 py-2 text-gray-700 transition duration-300 hover:bg-indigo-600 hover:text-white">
                Next
            </a>
            <a asp-action="Index"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-cuisine="@Model.Cuisine"
               asp-route-difficulty="@Model.Difficulty"
               asp-route-cookTime="@Model.CookTime"
               asp-route-servings="@Model.Servings"
               asp-route-sortBy="@Model.SortBy"
               asp-route-itemsPerPage="@Model.ItemsPerPage"
               asp-route-currentPage="@Model.TotalPages"
               class="rounded-md border border-gray-300 bg-white px-4 py-2 text-gray-700 transition duration-300 hover:bg-indigo-600 hover:text-white">
                Last
            </a>
        }
    </div>

</div>

@section Scripts {
    <script src="~/js/recipe-browser.js"></script>
}